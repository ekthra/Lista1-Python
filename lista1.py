# -*- coding: utf-8 -*-
"""Lista1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14GXNr7J93QDGxpzyLUWSCVhF6l0TddAW

1. Faça um programa que calcule a média de três números inseridos pelo usuário.
"""

soma = 0
media = 0

for i in range (0, 3):
  numero = int(input('Digite um número inteiro:'))
  soma += numero

media = soma/3

print(f'A média de números digitados é de: {media}')

"""2. Crie um programa que determine se um número inserido pelo usuário é par ou ímpar."""

numero = int(input('Digite um número: '))

if numero % 2 == 0:
  print('Este número é par!')
else:
  print('Este número é impar!')

"""3. Escreva um programa que solicite um número ao usuário e imprima todos os números pares de 0 até
esse número.
"""

# Commented out IPython magic to ensure Python compatibility.
# %load_ext cudf.pandas
import pandas as pd
import numpy as np

# Randomly generated dataset of parking violations-
# Define the number of rows
num_rows = 1000000

states = ["NY", "NJ", "CA", "TX"]
violations = ["Double Parking", "Expired Meter", "No Parking",
              "Fire Hydrant", "Bus Stop"]
vehicle_types = ["SUBN", "SDN"]

# Create a date range
start_date = "2022-01-01"
end_date = "2022-12-31"
dates = pd.date_range(start=start_date, end=end_date, freq='D')

# Generate random data
data = {
    "Registration State": np.random.choice(states, size=num_rows),
    "Violation Description": np.random.choice(violations, size=num_rows),
    "Vehicle Body Type": np.random.choice(vehicle_types, size=num_rows),
    "Issue Date": np.random.choice(dates, size=num_rows),
    "Ticket Number": np.random.randint(1000000000, 9999999999, size=num_rows)
}

# Create a DataFrame
df = pd.DataFrame(data)

# Which parking violation is most commonly committed by vehicles from various U.S states?

(df[["Registration State", "Violation Description"]]  # get only these two columns
 .value_counts()  # get the count of offences per state and per type of offence
 .groupby("Registration State")  # group by state
 .head(1)  # get the first row in each group (the type of offence with the largest count)
 .sort_index()  # sort by state name
 .reset_index()
)

numero = int(input('Digite um número: '))
contador = 0

while contador <= numero:
  print(f'{contador}, ', end='')
  contador += 2

print(f'Estes são todos os números pares até {numero}')

"""4. Crie um programa que leia uma lista de números e exiba o maior e o menor valor da lista."""

maior = 0
menor = 0
contador = 0
lista_numeros = [1, 6, 7, 9, 0, 14, 15, 22]

for numero in lista_numeros:
  if contador == 0:
    menor = numero
    maior = numero
  else:
    if numero > maior:
      maior = numero
    if numero < menor:
      menor = numero
  contador += 1
print(f'O maior número da lista é: {maior}\nO menor número da lista é:{menor}')

"""5. Faça um programa que leia uma lista de números e retorne a média dos números pares."""

lista_numeros = [1, 6, 7, 9, 0, 14, 15, 22]
soma = 0
media = 0
contador = 0

for numero in lista_numeros:
  if numero % 2 == 0:
    soma += numero
    contador += 1

media = soma/contador

print(f'A média dos números pares na lista é de: {media}')

"""6. Escreva um programa que peça um número inteiro positivo ao usuário e calcule o fatorial desse
número.
"""

numero = -1
contador = 0
contador_fatorial = 1
while numero < 0:
  numero = int(input('Digite um número inteiro positivo: '))
  if numero < 0:
    print('Este não é um número positivo!')

while contador_fatorial != 0:
  if numero == 1 or numero == 0:
    numero = 1
    break
  if contador == 0:
    contador_fatorial = numero - 1
  else:
    contador_fatorial = contador_fatorial - 1
  if contador_fatorial != 0:
    numero = numero * contador_fatorial
  contador += 1

print(f'O fatorial do número digitado é: {numero}')

"""7. Crie um programa que imprima a sequência de Fibonacci até um valor inserido pelo usuário."""

numero = -1
valor_anterior = 1
valor_atual = 1
valor_intermediario = 0
contador = 0

while numero < 0:
  numero = int(input('Digite um número inteiro positivo: '))
  if numero < 0:
    print('Este não é um número positivo!')

while valor_atual <= numero:
  if contador == 0:
    print(f'{valor_anterior}, {valor_atual}, ', end='')
    contador += 1
  else:
    print(f'{valor_atual}, ', end='')
  valor_intermediario = valor_atual
  valor_atual = valor_anterior + valor_atual
  valor_anterior = valor_intermediario


print(f'Está é a sequência de fibonacci, até o número: {numero}')

"""8. Faça um programa que determine se um número é primo ou não."""

numero = -1
while numero < 0:
  numero = int(input('Digite um número inteiro positivo: '))
  if numero < 0:
    print('Este não é um número positivo!')
if numero != 2 and numero != 3 and numero != 5 and numero != 7:
  if numero % 2 == 0 or numero % 3 == 0 or numero % 5 == 0 or numero % 7 == 0 or numero % 9 == 0:
    print('este não é um número primo!')
  else:
    print('Este é um número primo!')
else:
    print('Este é um número primo!')

"""9. Escreva um programa que leia uma lista de nomes e retorne uma nova lista com apenas os nomes que
começam com a letra 'A'.
"""

lista_nomes = ["Ana", "Amanda", "Bruno", "Carlos", "Daniela", "Eduardo", "Fernanda", "Gabriel", "Helena", "Igor", "Juliana"]
contador_inicial = 0
Nova_lista = []

for nome in lista_nomes:
  for letra in nome:
    contador = nome.index(letra)
    if contador == 0:
      if letra == 'a' or letra == 'A':
        Nova_lista.append(nome)
        contador += 1
    else:
      break
  contador = 0

print(Nova_lista)

"""10. Crie um programa que simule o jogo "Pedra, Papel e Tesoura" entre o usuário e o computador. O
programa deve solicitar a escolha do usuário e, em seguida, escolher aleatoriamente a escolha do
computador e determinar o vencedor.
"""

import random
escolha = 0
jogada = 0

while escolha != 999:
  while jogada != 1 and jogada != 2 and jogada != 3:
    jogada = int(input('Vamos jogar pedra, papel ou tesoura!\nDigite sua jogada: \n  Pedra [1] \n  Papel [2]\nTesoura [3]\n\nEscolha: '))
    if jogada != 1 and jogada != 2 and jogada != 3:
      print('Escolha uma opção válida!')
    else:
      break
  computador = random.randint(1,3)
  if computador == 1 and jogada == 2:
    print('O computador escolheu PEDRA, Você ganhou!!!')
  elif computador == 1 and jogada == 3:
    print('O computador escolheu PEDRA, Você perdeu!!!')
  elif computador == 1 and jogada == 1:
    print('O computador escolheu PEDRA, Empatamos!!!')
  elif computador == 2 and jogada == 1:
    print('O computador escolheu PAPEL, Você perdeu!!!')
  elif computador == 2 and jogada == 3:
    print('O computador escolheu PAPEL, Você ganhou!!!')
  elif computador == 2 and jogada == 2:
    print('O computador escolheu PAPEL, Empatamos!!!')
  elif computador == 3 and jogada == 1:
    print('O computador escolheu TESOURA, Você ganhou!!!')
  elif computador == 3 and jogada == 2:
    print('O computador escolheu TESOURA, Você perdeu!!!')
  elif computador == 3 and jogada == 3:
    print('O computador escolheu TESOURA, Empatamos!!!')
  escolha = int(input('Digite [999] para parar o jogo!'))
  jogada = 0